/* 
* Generated by
* 
*      _____ _          __  __      _     _
*     / ____| |        / _|/ _|    | |   | |
*    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
*     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
*     ____) |   < (_| | | | || (_) | | (_| |  __/ |
*    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
*
* The code generator that works in many programming languages
*
*			https://www.skaffolder.com
*
*
* You can generate the code from the command-line
*       https://npmjs.com/package/skaffolder-cli
*
*       npm install -g skaffodler-cli
*
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*
* To remove this comment please upgrade your plan here: 
*      https://app.skaffolder.com/#!/upgrade
*
* Or get up to 70% discount sharing your unique link:
*       https://app.skaffolder.com/#!/register?friend=5e8c3cd98763035aac7a90c1
*
* You will get 10% discount for each one of your friends
* 
*/
package com.hiimat.db.hiimat_db.entity.base;

/**
 * 
 * 
  _____                      _              _ _ _     _   _     _        __ _ _      
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |     
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___ 
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|
 
                                                                                   
 * DO NOT EDIT THIS FILE!! 
 *
 *  FOR CUSTOMIZE DaringUserBase PLEASE EDIT ../DaringUser.java
 * 
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER CODE GENERATION --
 * 
 */
 

/**
 * This is the model of DaringUser object
 * 
 */
 
import org.bson.types.ObjectId;
import org.mongodb.morphia.annotations.Entity;
import java.util.Date;
import java.math.BigDecimal;
import java.util.List;
import java.util.ArrayList;

import org.mongodb.morphia.annotations.Id;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import com.hiimat.utils.ObjectIdListSerializer;


//IMPORT RELATIONS
import com.hiimat.db.hiimat_db.entity.Dare;
import com.hiimat.db.hiimat_db.entity.DaringUser;
import com.hiimat.db.hiimat_db.entity.User;

@Entity("DaringUser")
public class DaringUserBase {
	
	@Id
	@JsonSerialize(using = ToStringSerializer.class)
	private ObjectId _id;
	
	// Attributes
    private Date AcceptedOn;
    private Date AssignedOn;
    private Date CompletedOn;
    private String Status;
	
	
	
	
	// Relations m:m dare
	@JsonSerialize(using = ObjectIdListSerializer.class)
	private List<ObjectId> dare;
	
	// Relations m:m user
	@JsonSerialize(using = ObjectIdListSerializer.class)
	private List<ObjectId> user;
	
	

    // GETTER AND SETTER
    
	public ObjectId get_id() {
		return _id;
	}

	public void set_id(ObjectId id) {
		this._id = id;
	}


	
	public Date getAcceptedOn() {
		return AcceptedOn;
	}


	public void setAcceptedOn(Date AcceptedOn) {
		this.AcceptedOn = AcceptedOn;
	}
    
	public Date getAssignedOn() {
		return AssignedOn;
	}


	public void setAssignedOn(Date AssignedOn) {
		this.AssignedOn = AssignedOn;
	}
    
	public Date getCompletedOn() {
		return CompletedOn;
	}


	public void setCompletedOn(Date CompletedOn) {
		this.CompletedOn = CompletedOn;
	}
    
	public String getStatus() {
		return Status;
	}


	public void setStatus(String Status) {
		this.Status = Status;
	}
    

	
    
    
    
    
    // Relations m:m dare
	public List<ObjectId> getDare() {
		return dare;
	}

	public void setDare(List<ObjectId> dare) {
		this.dare = dare;
	}
	
    
    // Relations m:m user
	public List<ObjectId> getUser() {
		return user;
	}

	public void setUser(List<ObjectId> user) {
		this.user = user;
	}
	
    
}